// <auto-generated />
using System;
using FastTrackEServices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastTrackEServices.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FastTrackEServices.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FastTrackEServices.Model.OrderCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cart_name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateConfirmed")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dateRegistered")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.ToTable("OrderCarts");
                });

            modelBuilder.Entity("FastTrackEServices.Model.OwnedShoeware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateAcquired")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("shoeId")
                        .HasColumnType("int");

                    b.Property<int?>("shoewareRepairId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.HasIndex("shoeId");

                    b.HasIndex("shoewareRepairId");

                    b.ToTable("OwnedShoewares");
                });

            modelBuilder.Entity("FastTrackEServices.Model.Shoeware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shoewares");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("shoeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("shoeId");

                    b.ToTable("ShoewareColors");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("orderCartId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("shoeColor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("shoewareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("orderCartId");

                    b.HasIndex("shoewareId");

                    b.ToTable("ShoewareOrders");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareRepair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateConfirmed")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dateRegistered")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.ToTable("ShoewareRepairs");
                });

            modelBuilder.Entity("FastTrackEServices.Model.OrderCart", b =>
                {
                    b.HasOne("FastTrackEServices.Model.Client", "client")
                        .WithMany("orderCarts")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("FastTrackEServices.Model.OwnedShoeware", b =>
                {
                    b.HasOne("FastTrackEServices.Model.Client", "client")
                        .WithMany("ownedShoes")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastTrackEServices.Model.Shoeware", "shoe")
                        .WithMany()
                        .HasForeignKey("shoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastTrackEServices.Model.ShoewareRepair", "shoewareRepair")
                        .WithMany("ownedShoes")
                        .HasForeignKey("shoewareRepairId");

                    b.Navigation("client");

                    b.Navigation("shoe");

                    b.Navigation("shoewareRepair");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareColor", b =>
                {
                    b.HasOne("FastTrackEServices.Model.Shoeware", "shoe")
                        .WithMany("shoeColors")
                        .HasForeignKey("shoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shoe");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareOrder", b =>
                {
                    b.HasOne("FastTrackEServices.Model.OrderCart", "orderCart")
                        .WithMany("shoewareOrders")
                        .HasForeignKey("orderCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastTrackEServices.Model.Shoeware", "shoeware")
                        .WithMany()
                        .HasForeignKey("shoewareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orderCart");

                    b.Navigation("shoeware");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareRepair", b =>
                {
                    b.HasOne("FastTrackEServices.Model.Client", "client")
                        .WithMany("shoeRepairs")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("FastTrackEServices.Model.Client", b =>
                {
                    b.Navigation("orderCarts");

                    b.Navigation("ownedShoes");

                    b.Navigation("shoeRepairs");
                });

            modelBuilder.Entity("FastTrackEServices.Model.OrderCart", b =>
                {
                    b.Navigation("shoewareOrders");
                });

            modelBuilder.Entity("FastTrackEServices.Model.Shoeware", b =>
                {
                    b.Navigation("shoeColors");
                });

            modelBuilder.Entity("FastTrackEServices.Model.ShoewareRepair", b =>
                {
                    b.Navigation("ownedShoes");
                });
#pragma warning restore 612, 618
        }
    }
}
